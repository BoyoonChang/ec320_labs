## Exercises
1. Create a new variable called `my.num` that contains 5 numbers
```{r}
my.num = 1:5
```
2. Multiply `my.num` by 3
3. Create a second variable called `my.char` that contains 5 character strings
4. Combine the two variables `my.num` and `my.char` into a variable called `both`combined`
5. What is the length of `combined`? (Hint: use the `length()` function)
6. What class is `combined`? Why?
7. Divide `combined` by 3, what happens?
8. Create a vector with elements 1 2 3 4 5 6 and call it `a`
9. Create another vector with elements 10 20 30 40 50 and call it `b`
10. What happens if you try to add `a` and `b` together? Why?
11. Append the value 60 onto the vector `b` (hint: you can use the c() function)
12. Add `a` and `b` together
13. Multiply `a` and `b` together. Pay attention to how R performs operations on vectors of the same length.
## Exercises
1. Create a new variable called `my.num` that contains 5 numbers
```{r}
my.num = 1:5
```
2. Multiply `my.num` by 3
3. Create a second variable called `my.char` that contains 5 character strings
4. Combine the two variables `my.num` and `my.char` into a variable called `both`combined`
5. What is the length of `combined`? (Hint: use the `length()` function)
6. What class is `combined`? Why?
7. Divide `combined` by 3, what happens?
8. Create a vector with elements 1 2 3 4 5 6 and call it `a`
9. Create another vector with elements 10 20 30 40 50 and call it `b`
10. What happens if you try to add `a` and `b` together? Why?
11. Append the value 60 onto the vector `b` (hint: you can use the c() function)
12. Add `a` and `b` together
13. Multiply `a` and `b` together. Pay attention to how R performs operations on vectors of the same length.
my.num = 1:5
## Exercises
1. Create a new variable called `my.num` that contains 5 numbers
```{r}
my.num = 1:5
```
2. Multiply `my.num` by 3
3. Create a second variable called `my.char` that contains 5 character strings
4. Combine the two variables `my.num` and `my.char` into a variable called `both`combined`
5. What is the length of `combined`? (Hint: use the `length()` function)
6. What class is `combined`? Why?
7. Divide `combined` by 3, what happens?
8. Create a vector with elements 1 2 3 4 5 6 and call it `a`
9. Create another vector with elements 10 20 30 40 50 and call it `b`
10. What happens if you try to add `a` and `b` together? Why?
11. Append the value 60 onto the vector `b` (hint: you can use the c() function)
12. Add `a` and `b` together
13. Multiply `a` and `b` together. Pay attention to how R performs operations on vectors of the same length.
## Exercises
1. Create a new variable called `my.num` that contains 5 numbers
```{r}
my.num = 1:5
```
2. Multiply `my.num` by 3
3. Create a second variable called `my.char` that contains 5 character strings
4. Combine the two variables `my.num` and `my.char` into a variable called `both`combined`
5. What is the length of `combined`? (Hint: use the `length()` function)
6. What class is `combined`? Why?
7. Divide `combined` by 3, what happens?
8. Create a vector with elements 1 2 3 4 5 6 and call it `a`
9. Create another vector with elements 10 20 30 40 50 and call it `b`
10. What happens if you try to add `a` and `b` together? Why?
11. Append the value 60 onto the vector `b` (hint: you can use the c() function)
12. Add `a` and `b` together
13. Multiply `a` and `b` together. Pay attention to how R performs operations on vectors of the same length.
## Exercises
1. Create a new variable called `my.num` that contains 5 numbers
```{r}
my.num = 1:5
```
2. Multiply `my.num` by 3
3. Create a second variable called `my.char` that contains 5 character strings
4. Combine the two variables `my.num` and `my.char` into a variable called `both`combined`
5. What is the length of `combined`? (Hint: use the `length()` function)
6. What class is `combined`? Why?
7. Divide `combined` by 3, what happens?
8. Create a vector with elements 1 2 3 4 5 6 and call it `a`
9. Create another vector with elements 10 20 30 40 50 and call it `b`
10. What happens if you try to add `a` and `b` together? Why?
11. Append the value 60 onto the vector `b` (hint: you can use the c() function)
12. Add `a` and `b` together
13. Multiply `a` and `b` together. Pay attention to how R performs operations on vectors of the same length.
## Exercises
1. Create a new variable called `my.num` that contains 5 numbers
```{r}
my.num = 1:5
```
2. Multiply `my.num` by 3
3. Create a second variable called `my.char` that contains 5 character strings
4. Combine the two variables `my.num` and `my.char` into a variable called `both`combined`
5. What is the length of `combined`? (Hint: use the `length()` function)
6. What class is `combined`? Why?
7. Divide `combined` by 3, what happens?
8. Create a vector with elements 1 2 3 4 5 6 and call it `a`
9. Create another vector with elements 10 20 30 40 50 and call it `b`
10. What happens if you try to add `a` and `b` together? Why?
11. Append the value 60 onto the vector `b` (hint: you can use the c() function)
12. Add `a` and `b` together
13. Multiply `a` and `b` together. Pay attention to how R performs operations on vectors of the same length.
my.num = 1:5
3*my_num
my_num = 1:5
3*my_num
my_char=2:6
## Exercises
1. Create a new variable called `my_num` that contains 5 numbers
```{r}
my_num = 1:5
```
2. Multiply `my.num` by 3
```{r}
3*my_num
```
3. Create a second variable called `my.char` that contains 5 character strings
```{r}
my_char=2:6
```
4. Combine the two variables `my.num` and `my.char` into a variable called `both`combined`
5. What is the length of `combined`? (Hint: use the `length()` function)
6. What class is `combined`? Why?
7. Divide `combined` by 3, what happens?
8. Create a vector with elements 1 2 3 4 5 6 and call it `a`
9. Create another vector with elements 10 20 30 40 50 and call it `b`
10. What happens if you try to add `a` and `b` together? Why?
11. Append the value 60 onto the vector `b` (hint: you can use the c() function)
12. Add `a` and `b` together
13. Multiply `a` and `b` together. Pay attention to how R performs operations on vectors of the same length.
## Exercises
1. Create a new variable called `my_num` that contains 5 numbers
```{r}
my_num = 1:5
```
2. Multiply `my.num` by 3
```{r}
3*my_num
```
3. Create a second variable called `my.char` that contains 5 character strings
```{r}
my_char=2:6
```
4. Combine the two variables `my.num` and `my.char` into a variable called `both`combined`
5. What is the length of `combined`? (Hint: use the `length()` function)
6. What class is `combined`? Why?
7. Divide `combined` by 3, what happens?
8. Create a vector with elements 1 2 3 4 5 6 and call it `a`
9. Create another vector with elements 10 20 30 40 50 and call it `b`
10. What happens if you try to add `a` and `b` together? Why?
11. Append the value 60 onto the vector `b` (hint: you can use the c() function)
12. Add `a` and `b` together
13. Multiply `a` and `b` together. Pay attention to how R performs operations on vectors of the same length.
## Exercises
1. Create a new variable called `my_num` that contains 5 numbers
```{r}
my_num = 1:5
```
2. Multiply `my.num` by 3
```{r}
3*my_num
```
3. Create a second variable called `my.char` that contains 5 character strings
```{r}
my_char=2:6
```
4. Combine the two variables `my.num` and `my.char` into a variable called `both`combined`
5. What is the length of `combined`? (Hint: use the `length()` function)
6. What class is `combined`? Why?
7. Divide `combined` by 3, what happens?
8. Create a vector with elements 1 2 3 4 5 6 and call it `a`
9. Create another vector with elements 10 20 30 40 50 and call it `b`
10. What happens if you try to add `a` and `b` together? Why?
11. Append the value 60 onto the vector `b` (hint: you can use the c() function)
12. Add `a` and `b` together
13. Multiply `a` and `b` together. Pay attention to how R performs operations on vectors of the same length.
```{r}
y = 10
y
```
y = 10
y
## Exercises
1. Create a new variable called `my_num` that contains 5 numbers
```{r}
my_num = 1:5
```
2. Multiply `my.num` by 3
```{r}
3*my_num
```
3. Create a second variable called `my.char` that contains 5 character strings
```{r}
my_char=2:6
```
4. Combine the two variables `my.num` and `my.char` into a variable called `both`combined`
5. What is the length of `combined`? (Hint: use the `length()` function)
6. What class is `combined`? Why?
7. Divide `combined` by 3, what happens?
8. Create a vector with elements 1 2 3 4 5 6 and call it `a`
9. Create another vector with elements 10 20 30 40 50 and call it `b`
10. What happens if you try to add `a` and `b` together? Why?
11. Append the value 60 onto the vector `b` (hint: you can use the c() function)
12. Add `a` and `b` together
13. Multiply `a` and `b` together. Pay attention to how R performs operations on vectors of the same length.
```r
my_num = 1:5
```
```{r}
my_num = 1:5
```
my_num = 1:5
3*my_num
my_char=2:6
c(my_num, my_char) -> bothcombined
length(bothcombined)
class(bothcombined)
3. Create a second variable called `my.char` that contains 5 character strings
```{r}
my_char=2:6
```
4. Combine the two variables `my.num` and `my.char` into a variable called `both`combined`
```{r}
c(my_num, my_char) -> combined
```
5. What is the length of `combined`? (Hint: use the `length()` function)
```{r}
length(bothcombined)
```
6. What class is `combined`? Why?
```{r}
class(bothcombined)
```
7. Divide `combined` by 3, what happens?
```{r}
combined / 3
```
8. Create a vector with elements 1 2 3 4 5 6 and call it `a`
9. Create another vector with elements 10 20 30 40 50 and call it `b`
10. What happens if you try to add `a` and `b` together? Why?
11. Append the value 60 onto the vector `b` (hint: you can use the c() function)
12. Add `a` and `b` together
13. Multiply `a` and `b` together. Pay attention to how R performs operations on vectors of the same length.
c(my_num, my_char) -> combined
length(combined)
class(combined)
combined / 3
my_num = 1:5
```{r}
3*my_num
```
```{r}
#print the first few objects in vector1
head(vector1)
#print the first 2 objects in vector1
head(vector1, 2)
#print the last few objects in vector1
tail(vector1)
#print last two objects in vector1
tail(vector1, 2)
### Vectors
You can create a vector (a list) of items in R.
```{r}
# create a vector of 1 through 10
vector1 <- 1:10
vector1
```
3*my_num
3. Create a second variable called `my.char` that contains 5 character strings
```{r}
my_char=c("a", "b", "c", "d", "e")
```
4. Combine the two variables `my.num` and `my.char` into a variable called `both`combined`
```{r}
c(my_num, my_char) -> combined
```
5. What is the length of `combined`? (Hint: use the `length()` function)
```{r}
length(combined)
```
6. What class is `combined`? Why?
```{r}
class(combined)
```
7. Divide `combined` by 3, what happens?
```{r}
combined / 3
```
8. Create a vector with elements 1 2 3 4 5 6 and call it `a`
```{r}
a = 1:6
```
9. Create another vector with elements 10 20 30 40 50 and call it `b`
```{r}
```
10. What happens if you try to add `a` and `b` together? Why?
11. Append the value 60 onto the vector `b` (hint: you can use the c() function)
12. Add `a` and `b` together
13. Multiply `a` and `b` together. Pay attention to how R performs operations on vectors of the same length.
3. Create a second variable called `my.char` that contains 5 character strings
```{r}
my_char=c("a", "b", "c", "d", "e")
```
4. Combine the two variables `my.num` and `my.char` into a variable called `both`combined`
```{r}
c(my_num, my_char) -> combined
```
5. What is the length of `combined`? (Hint: use the `length()` function)
```{r}
length(combined)
```
6. What class is `combined`? Why?
```{r}
class(combined)
```
7. Divide `combined` by 3, what happens?
```{r}
combined / 3
```
8. Create a vector with elements 1 2 3 4 5 6 and call it `a`
```{r}
a = 1:6
```
9. Create another vector with elements 10 20 30 40 50 and call it `b`
```{r}
```
10. What happens if you try to add `a` and `b` together? Why?
11. Append the value 60 onto the vector `b` (hint: you can use the c() function)
12. Add `a` and `b` together
13. Multiply `a` and `b` together. Pay attention to how R performs operations on vectors of the same length.
my_num = 1:5
3*my_num
my_char=c("a", "b", "c", "d", "e")
c(my_num, my_char) -> combined
length(combined)
class(combined)
combined / 3
a = 1:6
b = c(10, 20, 30, 40, 50)
b = 10*1:5
a + b
b = c(b,60)
a + b
3. Create a second variable called `my.char` that contains 5 character strings
```{r}
my_char=c("a", "b", "c", "d", "e")
```
4. Combine the two variables `my.num` and `my.char` into a variable called `both`combined`
```{r}
c(my_num, my_char) -> combined
```
5. What is the length of `combined`? (Hint: use the `length()` function)
```{r}
length(combined)
```
6. What class is `combined`? Why?
```{r}
class(combined)
```
7. Divide `combined` by 3, what happens?
```{r}
combined / 3
```
8. Create a vector with elements 1 2 3 4 5 6 and call it `a`
```{r}
a = 1:6
```
9. Create another vector with elements 10 20 30 40 50 and call it `b`
```{r}
b = c(10, 20, 30, 40, 50)
b = 10*1:5
```
10. What happens if you try to add `a` and `b` together? Why?
```{r}
a + b
```
11. Append the value 60 onto the vector `b` (hint: you can use the c() function)
```{r}
b = c(b,60)
```
12. Add `a` and `b` together
```{r}
a + b
```
13. Multiply `a` and `b` together. Pay attention to how R performs operations on vectors of the same length.
```{r}
a*b
```
a*b
3. Create a second variable called `my.char` that contains 5 character strings
```{r}
my_char=c("a", "b", "c", "d", "e")
```
4. Combine the two variables `my.num` and `my.char` into a variable called `both`combined`
```{r}
c(my_num, my_char) -> combined
```
5. What is the length of `combined`? (Hint: use the `length()` function)
```{r}
length(combined)
```
6. What class is `combined`? Why?
```{r}
class(combined)
```
7. Divide `combined` by 3, what happens?
```{r}
combined / 3
```
8. Create a vector with elements 1 2 3 4 5 6 and call it `a`
```{r}
a = 1:6
```
9. Create another vector with elements 10 20 30 40 50 and call it `b`
```{r}
b = c(10, 20, 30, 40, 50)
b = 10*1:5
```
10. What happens if you try to add `a` and `b` together? Why?
```{r}
a + b
```
11. Append the value 60 onto the vector `b` (hint: you can use the c() function)
```{r}
b = c(b,60)
```
12. Add `a` and `b` together
```{r}
a + b
```
13. Multiply `a` and `b` together. Pay attention to how R performs operations on vectors of the same length.
```{r}
a*b
a%*%b
```
a%*%b
